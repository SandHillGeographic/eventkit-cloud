version: '3'
services:
  eventkit:
    restart: unless-stopped
    build:
      context: .
      dockerfile: config/Dockerfile
    image: eventkit/eventkit-base:1.2.1
    volumes:
    - ./:/var/lib/eventkit/
    - /var/lib/eventkit/node_modules/
    - /downloads:/downloads
    user: eventkit
    depends_on:
    - postgis
    - rabbitmq
    links:
    - postgis
    - rabbitmq
    expose:
    - "6443"
    command: sh /var/lib/eventkit/scripts/eventkit-start.sh
    environment:
    - DATABASE_URL=postgres://eventkit:eventkit_exports@postgis:5432/eventkit_exports
    - BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    - SITE_NAME
    - SITE_IP
    - TERM
    - DEBUG=True
    - LOG_LEVEL=INFO
    - PRODUCTION
    - DJANGO_LOG_LEVEL
    - LOG_LEVEL
    - EXPORT_DOWNLOAD_ROOT
    - EXPORT_STAGING_ROOT
    - PYTHONWARNINGS
    - DISABLE_SSL_VERIFICATION
    - MAX_EXPORTRUN_EXPIRATION_DAYS
    - USE_S3
    - AWS_BUCKET_NAME
    - AWS_ACCESS_KEY
    - AWS_SECRET_KEY
    - CONTAINER_CODE_PATH
    - DEV_MACHINE_CODE_PATH
    - DJANGO_MODEL_LOGIN=True
    - LOGIN_DISCLAIMER=Welcome to Sand Hill Geographic EventKit 
    - BANNER_TEXT
    - BANNER_TEXT_COLOR
    - BANNER_BACKGROUND_COLOR
    - GEOCODING_API_URL
    - GEOCODING_API_TYPE
    - MAX_EXPORTRUN_EXPIRATION_DAYS=30
    - BASEMAP_URL
    - GEOCODING_AUTH_CERT
    - GEOCODING_AUTH_KEY
    - PROVIDER_CHECK_INTERVAL
    extra_hosts:
    - "${SITE_NAME}:${SITE_IP}"
  celery:
    restart: unless-stopped
    image: eventkit/eventkit-base:1.2.1
    volumes:
    - ./:/var/lib/eventkit/
    - /staging/:/staging/
    - /downloads/:/downloads/
    user: eventkit
    depends_on:
    - postgis
    - rabbitmq
    - eventkit
    links:
    - postgis
    - rabbitmq
    environment:
    - DATABASE_URL=postgres://eventkit:eventkit_exports@postgis:5432/eventkit_exports
    - BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    - SITE_NAME
    - SITE_IP
    - TERM
    - PRODUCTION
    - DJANGO_LOG_LEVEL
    - LOG_LEVEL
    - EXPORT_STAGING_ROOT
    - EXPORT_DOWNLOAD_ROOT
    - PYTHONWARNINGS
    - USE_S3
    - AWS_BUCKET_NAME
    - AWS_ACCESS_KEY
    - AWS_SECRET_KEY
    - DISABLE_SSL_VERIFICATION
    - MAX_EXPORTRUN_EXPIRATION_DAYS
    - CONCURRENCY=4
    - MAPPROXY_CONCURRENCY=4
    - CONTAINER_CODE_PATH
    - DEV_MACHINE_CODE_PATH
    extra_hosts:
    - "${SITE_NAME}:${SITE_IP}"
    command: sh /var/lib/eventkit/scripts/celery-start.sh
  celery-beat:
    restart: unless-stopped
    image: eventkit/eventkit-base:1.2.1
    volumes:
    - ./:/var/lib/eventkit/
    user: eventkit
    depends_on:
    - postgis
    - rabbitmq
    - celery
    - eventkit
    links:
    - postgis
    - rabbitmq
    environment:
    - DATABASE_URL=postgres://eventkit:eventkit_exports@postgis:5432/eventkit_exports
    - BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    - CONCURRENCY=1
    - SITE_NAME
    - SITE_IP
    - TERM
    - PRODUCTION
    - DJANGO_LOG_LEVEL
    - LOG_LEVEL
    - EXPORT_DOWNLOAD_ROOT
    - PYTHONWARNINGS
    - DISABLE_SSL_VERIFICATION
    - MAX_EXPORTRUN_EXPIRATION_DAYS
    - CONTAINER_CODE_PATH
    - DEV_MACHINE_CODE_PATH
    extra_hosts:
    - "${SITE_NAME}:${SITE_IP}"
    command: sh /var/lib/eventkit/scripts/celery-beat-start.sh
  postgis:
    restart: unless-stopped
    image: mdillon/postgis:9.5
    environment:
    - POSTGRES_USER=eventkit
    - POSTGRES_PASSWORD=eventkit_exports
    - POSTGRES_DB=eventkit_exports
    expose:
    - "5432"
    # This is stored up a directory because there will be permissions issues if ran with Vagrant shared directory.
    volumes:
    - "postgis_database:/var/lib/postgresql/data"
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3.6.6-management
    expose:
    - "5672"
  httpd:
    restart: unless-stopped
    build:
      context: .
      dockerfile: config/Dockerfile_httpd
    volumes:
    - ./eventkit_cloud:/var/lib/eventkit/eventkit_cloud
    - /downloads/:/downloads/
    - ./certificate.pem:/certificate.pem
    - ./key.pem:/key.pem
    image: httpd:2.4.23
    links:
    - eventkit
    - webpack
    ports:
    - "443:443"
    environment:
    - SITE_NAME=${SITE_NAME}
    - LOG_LEVEL=warn
  webpack:
    build:
      context: .
      dockerfile: config/Dockerfile_webpack
    volumes:
    - ./eventkit_cloud:/var/lib/eventkit/eventkit_cloud:rw
    - ./coverage/coveralls:/var/lib/eventkit/coverage/coveralls:rw
    - ./package.json:/var/lib/eventkit/package.json
    - ./config/ui/.eslintrc.json:/var/lib/eventkit/.eslintrc.json
    - ./config/ui/.eslintignore:/var/lib/eventkit/.eslintignore
    - ./config/ui/webpack.config.js:/var/lib/eventkit/webpack.config.js
    - ./config/ui/babel.config.js:/var/lib/eventkit/babel.config.js
    - ./config/ui/setupFile.js:/var/lib/eventkit/setupFile.js
    - ./config/ui/tsconfig.json:/var/lib/eventkit/tsconfig.json
    - ./config/ui/tslint.json:/var/lib/eventkit/tslint.json
    - ./.git:/var/lib/eventkit/.git
    command: npm run build
    ports:
    - "8080:8080"
    expose:
    - "9229"
    extra_hosts:
    - "${SITE_NAME}:${SITE_IP}"
    #if wishing to use the dev server uncomment this or run it via the command line
    # command: node --debug-brk --inspect=${SITE_NAME}:9229 ./node_modules/.bin/jest --runInBand
volumes:
  postgis_database:



