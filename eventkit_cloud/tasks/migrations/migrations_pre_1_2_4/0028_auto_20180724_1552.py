# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2018-07-24 15:52


from django.db import migrations
from django.db import models
from uuid import uuid4


def move_run_hook_to_export_tasks(apps, *args):
    ExportTaskRecord = apps.get_model('tasks', 'ExportTaskRecord')
    DataProviderTaskRecord = apps.get_model('tasks', 'DataProviderTaskRecord')
    ExportRun = apps.get_model('tasks', 'ExportRun')
    runs = ExportRun.objects.all()

    for run in runs:
        if run.downloadable:
            run_task_record, created = DataProviderTaskRecord.objects.get_or_create(run=run,
                                                                    name="run",
                                                                    slug="run",
                                                                    status="SUCCESS",
                                                                    display=False)
            ExportTaskRecord.objects.create(name="Project File (.zip)",
                                            celery_uid=uuid4(),
                                            export_provider_task=run_task_record,
                                            status=run.status,
                                            result=run.downloadable)


def move_export_tasks_to_run_hook(apps, *args):
    DataProviderTaskRecord = apps.get_model('tasks', 'DataProviderTaskRecord')
    FinalizeRunHookTaskRecord = apps.get_model('tasks', 'FinalizeRunHookTaskRecord')
    data_provider_task_records = DataProviderTaskRecord.objects.filter(name='run')

    for data_provider_task_record in data_provider_task_records:
        run = data_provider_task_record.run
        for task in data_provider_task_record.tasks.all():
            FinalizeRunHookTaskRecord.objects.create(run=run,
                                                     name=task.name,
                                                     celery_uid=task.celery_uid or uuid4(),
                                                     status=task.status,
                                                     pid=task.pid,
                                                     worker=task.worker,
                                                     cancel_user=task.cancel_user,
                                                     result=task.result,
                                                     created_at=task.created_at,
                                                     updated_at=task.updated_at)
        data_provider_task_record.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0027_auto_20180625_1519'),
    ]

    operations = [
        migrations.AlterField(
            model_name='finalizerunhooktaskrecord',
            name='result',
            field=models.OneToOneField(blank=True, null=True, on_delete=models.deletion.SET_NULL,
                                       related_name='finalize_task', to='tasks.FileProducingTaskResult'),
        ),
        migrations.AlterField(
            model_name='finalizerunhooktaskrecord',
            name='run',
            field=models.ForeignKey(null=True, on_delete=models.deletion.CASCADE, to='tasks.ExportRun'),
        ),
        migrations.RunPython(move_run_hook_to_export_tasks, reverse_code=move_export_tasks_to_run_hook),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='cancel_user',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='result',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='run',
        ),
        migrations.DeleteModel(
            name='FinalizeRunHookTaskRecord',
        ),
        migrations.RemoveField(
            model_name='exportrun',
            name='downloadable',
        ),
    ]
